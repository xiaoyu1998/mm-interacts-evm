/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export declare namespace Pool {
  export type AssetStruct = {
    token: AddressLike;
    borrowIndex: BigNumberish;
    borrowRate: BigNumberish;
    totalCollateral: BigNumberish;
    totalCollateralWithDebt: BigNumberish;
    totalDebtScaled: BigNumberish;
    unclaimedFee: BigNumberish;
  };

  export type AssetStructOutput = [
    token: string,
    borrowIndex: bigint,
    borrowRate: bigint,
    totalCollateral: bigint,
    totalCollateralWithDebt: bigint,
    totalDebtScaled: bigint,
    unclaimedFee: bigint
  ] & {
    token: string;
    borrowIndex: bigint;
    borrowRate: bigint;
    totalCollateral: bigint;
    totalCollateralWithDebt: bigint;
    totalDebtScaled: bigint;
    unclaimedFee: bigint;
  };

  export type PropsStruct = {
    assets: [Pool.AssetStruct, Pool.AssetStruct];
    bank: AddressLike;
    interestRateStrategy: AddressLike;
    configuration: BigNumberish;
    lastUpdateTimestamp: BigNumberish;
  };

  export type PropsStructOutput = [
    assets: [Pool.AssetStructOutput, Pool.AssetStructOutput],
    bank: string,
    interestRateStrategy: string,
    configuration: bigint,
    lastUpdateTimestamp: bigint
  ] & {
    assets: [Pool.AssetStructOutput, Pool.AssetStructOutput];
    bank: string;
    interestRateStrategy: string;
    configuration: bigint;
    lastUpdateTimestamp: bigint;
  };
}

export interface PoolStoreUtilsInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "POOL_BANK"
      | "POOL_BORROW_INDEX_0"
      | "POOL_BORROW_INDEX_1"
      | "POOL_BORROW_RATE_0"
      | "POOL_BORROW_RATE_1"
      | "POOL_CONFIGURATION"
      | "POOL_INTEREST_RATE_STRATEGY"
      | "POOL_LAST_UPDATE_TIME_STAMP"
      | "POOL_SOURCE"
      | "POOL_TOKEN_0"
      | "POOL_TOKEN_1"
      | "POOL_TOTAL_COLLATERAL_0"
      | "POOL_TOTAL_COLLATERAL_1"
      | "POOL_TOTAL_COLLATERAL_WITH_DEBT_0"
      | "POOL_TOTAL_COLLATERAL_WITH_DEBT_1"
      | "POOL_TOTAL_SCALED_DEBT_0"
      | "POOL_TOTAL_SCALED_DEBT_1"
      | "POOL_UNCLAIMED_FEE_0"
      | "POOL_UNCLAIMED_FEE_1"
      | "get"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "POOL_BANK", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "POOL_BORROW_INDEX_0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_BORROW_INDEX_1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_BORROW_RATE_0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_BORROW_RATE_1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_CONFIGURATION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_INTEREST_RATE_STRATEGY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_LAST_UPDATE_TIME_STAMP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_SOURCE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_TOKEN_0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_TOKEN_1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_TOTAL_COLLATERAL_0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_TOTAL_COLLATERAL_1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_TOTAL_COLLATERAL_WITH_DEBT_0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_TOTAL_COLLATERAL_WITH_DEBT_1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_TOTAL_SCALED_DEBT_0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_TOTAL_SCALED_DEBT_1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_UNCLAIMED_FEE_0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_UNCLAIMED_FEE_1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get",
    values: [AddressLike, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "POOL_BANK", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "POOL_BORROW_INDEX_0",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_BORROW_INDEX_1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_BORROW_RATE_0",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_BORROW_RATE_1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_CONFIGURATION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_INTEREST_RATE_STRATEGY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_LAST_UPDATE_TIME_STAMP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_SOURCE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_TOKEN_0",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_TOKEN_1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_TOTAL_COLLATERAL_0",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_TOTAL_COLLATERAL_1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_TOTAL_COLLATERAL_WITH_DEBT_0",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_TOTAL_COLLATERAL_WITH_DEBT_1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_TOTAL_SCALED_DEBT_0",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_TOTAL_SCALED_DEBT_1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_UNCLAIMED_FEE_0",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_UNCLAIMED_FEE_1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get", data: BytesLike): Result;
}

export interface PoolStoreUtils extends BaseContract {
  connect(runner?: ContractRunner | null): PoolStoreUtils;
  waitForDeployment(): Promise<this>;

  interface: PoolStoreUtilsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  POOL_BANK: TypedContractMethod<[], [string], "view">;

  POOL_BORROW_INDEX_0: TypedContractMethod<[], [string], "view">;

  POOL_BORROW_INDEX_1: TypedContractMethod<[], [string], "view">;

  POOL_BORROW_RATE_0: TypedContractMethod<[], [string], "view">;

  POOL_BORROW_RATE_1: TypedContractMethod<[], [string], "view">;

  POOL_CONFIGURATION: TypedContractMethod<[], [string], "view">;

  POOL_INTEREST_RATE_STRATEGY: TypedContractMethod<[], [string], "view">;

  POOL_LAST_UPDATE_TIME_STAMP: TypedContractMethod<[], [string], "view">;

  POOL_SOURCE: TypedContractMethod<[], [string], "view">;

  POOL_TOKEN_0: TypedContractMethod<[], [string], "view">;

  POOL_TOKEN_1: TypedContractMethod<[], [string], "view">;

  POOL_TOTAL_COLLATERAL_0: TypedContractMethod<[], [string], "view">;

  POOL_TOTAL_COLLATERAL_1: TypedContractMethod<[], [string], "view">;

  POOL_TOTAL_COLLATERAL_WITH_DEBT_0: TypedContractMethod<[], [string], "view">;

  POOL_TOTAL_COLLATERAL_WITH_DEBT_1: TypedContractMethod<[], [string], "view">;

  POOL_TOTAL_SCALED_DEBT_0: TypedContractMethod<[], [string], "view">;

  POOL_TOTAL_SCALED_DEBT_1: TypedContractMethod<[], [string], "view">;

  POOL_UNCLAIMED_FEE_0: TypedContractMethod<[], [string], "view">;

  POOL_UNCLAIMED_FEE_1: TypedContractMethod<[], [string], "view">;

  get: TypedContractMethod<
    [dataStoreAddress: AddressLike, key: BytesLike],
    [Pool.PropsStructOutput],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "POOL_BANK"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_BORROW_INDEX_0"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_BORROW_INDEX_1"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_BORROW_RATE_0"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_BORROW_RATE_1"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_CONFIGURATION"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_INTEREST_RATE_STRATEGY"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_LAST_UPDATE_TIME_STAMP"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_SOURCE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_TOKEN_0"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_TOKEN_1"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_TOTAL_COLLATERAL_0"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_TOTAL_COLLATERAL_1"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_TOTAL_COLLATERAL_WITH_DEBT_0"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_TOTAL_COLLATERAL_WITH_DEBT_1"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_TOTAL_SCALED_DEBT_0"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_TOTAL_SCALED_DEBT_1"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_UNCLAIMED_FEE_0"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POOL_UNCLAIMED_FEE_1"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "get"
  ): TypedContractMethod<
    [dataStoreAddress: AddressLike, key: BytesLike],
    [Pool.PropsStructOutput],
    "view"
  >;

  filters: {};
}
