/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PoolInterestRateStrategy,
  PoolInterestRateStrategyInterface,
} from "../../../contracts/interest/PoolInterestRateStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optimalUsageRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rateBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rateSlope1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rateSlope2",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "optimalUsageRatio",
        type: "uint256",
      },
    ],
    name: "InvalidOptimalUsageRate",
    type: "error",
  },
  {
    inputs: [],
    name: "MAX_EXCESS_USAGE_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPTIMAL_USAGE_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAvailableReserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDebt",
            type: "uint256",
          },
        ],
        internalType: "struct InterestUtils.CalculateInterestRatesParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "calculateInterestRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOptimalUsageRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateSlope1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateSlope2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRatebase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604051610a13380380610a1383398181016040528101906100339190610108565b836b033b2e3c9fd0803ce8000000101561008457836040517fb90df3f200000000000000000000000000000000000000000000000000000000815260040161007b919061017e565b60405180910390fd5b8360808181525050836b033b2e3c9fd0803ce80000006100a491906101c8565b60a081815250508261010081815250508160c081815250508060e08181525050505050506101fc565b600080fd5b6000819050919050565b6100e5816100d2565b81146100f057600080fd5b50565b600081519050610102816100dc565b92915050565b60008060008060808587031215610122576101216100cd565b5b6000610130878288016100f3565b9450506020610141878288016100f3565b9350506040610152878288016100f3565b9250506060610163878288016100f3565b91505092959194509250565b610178816100d2565b82525050565b6000602082019050610193600083018461016f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101d3826100d2565b91506101de836100d2565b92508282039050818111156101f6576101f5610199565b5b92915050565b60805160a05160c05160e0516101005161079461027f600039600081816101a801526104190152600081816102c401526103f101526000818161016a015281816102f3015261036801526000818161025f015261046701526000818161022e015281816102800152818161033f015281816103cb015261044101526107946000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806375005bb01161005b57806375005bb0146100ee57806387f0409d1461010c578063a8602e861461012a578063a9c622f8146101485761007d565b80632dd9037b146100825780634329759a146100a057806354c365c6146100d0575b600080fd5b61008a610166565b6040516100979190610563565b60405180910390f35b6100ba60048036038101906100b5919061069a565b61018e565b6040516100c79190610563565b60405180910390f35b6100d86103c9565b6040516100e59190610563565b60405180910390f35b6100f66103ed565b6040516101039190610563565b60405180910390f35b610114610415565b6040516101219190610563565b60405180910390f35b61013261043d565b60405161013f9190610563565b60405180910390f35b610150610465565b60405161015d9190610563565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600061019861051b565b82602001518160200181815250507f0000000000000000000000000000000000000000000000000000000000000000816040018181525050600081602001511461022c578260000151816000018181525050806020015181600001516101fe91906106f6565b8160800181815250506102228160800151826020015161048990919063ffffffff16565b8160600181815250505b7f00000000000000000000000000000000000000000000000000000000000000008160600151111561033a5760006102bc7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084606001516102ae919061072a565b61048990919063ffffffff16565b90506102f1817f00000000000000000000000000000000000000000000000000000000000000006104d090919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000061031c91906106f6565b8260400181815161032d91906106f6565b91508181525050506103bc565b6103a37f000000000000000000000000000000000000000000000000000000000000000061039583606001517f00000000000000000000000000000000000000000000000000000000000000006104d090919063ffffffff16565b61048990919063ffffffff16565b816040018181516103b491906106f6565b915081815250505b8060400151915050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006b033b2e3c9fd0803ce800000060028304600019030483111515821517156104b257600080fd5b81600283046b033b2e3c9fd0803ce800000085020104905092915050565b6000816b019d971e4fe8401e7400000060001903048311158215176104f457600080fd5b6b033b2e3c9fd0803ce80000006b019d971e4fe8401e740000008385020104905092915050565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b61055d8161054a565b82525050565b60006020820190506105786000830184610554565b92915050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105db82610592565b810181811067ffffffffffffffff821117156105fa576105f96105a3565b5b80604052505050565b600061060d61057e565b905061061982826105d2565b919050565b6106278161054a565b811461063257600080fd5b50565b6000813590506106448161061e565b92915050565b6000604082840312156106605761065f61058d565b5b61066a6040610603565b9050600061067a84828501610635565b600083015250602061068e84828501610635565b60208301525092915050565b6000604082840312156106b0576106af610588565b5b60006106be8482850161064a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107018261054a565b915061070c8361054a565b9250828201905080821115610724576107236106c7565b5b92915050565b60006107358261054a565b91506107408361054a565b9250828203905081811115610758576107576106c7565b5b9291505056fea26469706673582212202f19018c05bf72097d60423f0024da04be1d937607dbddc569d10e91ec897ef864736f6c634300081b0033";

type PoolInterestRateStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolInterestRateStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolInterestRateStrategy__factory extends ContractFactory {
  constructor(...args: PoolInterestRateStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    optimalUsageRatio: BigNumberish,
    rateBase: BigNumberish,
    rateSlope1: BigNumberish,
    rateSlope2: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      optimalUsageRatio,
      rateBase,
      rateSlope1,
      rateSlope2,
      overrides || {}
    );
  }
  override deploy(
    optimalUsageRatio: BigNumberish,
    rateBase: BigNumberish,
    rateSlope1: BigNumberish,
    rateSlope2: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      optimalUsageRatio,
      rateBase,
      rateSlope1,
      rateSlope2,
      overrides || {}
    ) as Promise<
      PoolInterestRateStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PoolInterestRateStrategy__factory {
    return super.connect(runner) as PoolInterestRateStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolInterestRateStrategyInterface {
    return new Interface(_abi) as PoolInterestRateStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PoolInterestRateStrategy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PoolInterestRateStrategy;
  }
}
