/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DepositHandler,
  DepositHandlerInterface,
} from "../../../contracts/exchange/DepositHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenIndex",
            type: "uint8",
          },
        ],
        internalType: "struct DepositUtils.DepositParams",
        name: "depositParams",
        type: "tuple",
      },
    ],
    name: "executeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610fd8380380610fd8833981810160405281019061003291906101cb565b82828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505061021e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061010a826100df565b9050919050565b600061011c826100ff565b9050919050565b61012c81610111565b811461013757600080fd5b50565b60008151905061014981610123565b92915050565b600061015a826100ff565b9050919050565b61016a8161014f565b811461017557600080fd5b50565b60008151905061018781610161565b92915050565b6000610198826100ff565b9050919050565b6101a88161018d565b81146101b357600080fd5b50565b6000815190506101c58161019f565b92915050565b6000806000606084860312156101e4576101e36100da565b5b60006101f28682870161013a565b935050602061020386828701610178565b9250506040610214868287016101b6565b9150509250925092565b60805160a05160c051610d616102776000396000818161017d01526102f80152600081816102b001526104e8015260008181610141015281816102d40152818161031e0152818161042101526105cb0152610d616000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f4e5ba1146100515780634a4a7b041461006d578063660d0d671461008b5780639ff78c30146100a9575b600080fd5b61006b60048036038101906100669190610716565b6100c7565b005b6100756102ae565b60405161008291906107b5565b60405180910390f35b6100936102d2565b6040516100a091906107f1565b60405180910390f35b6100b16102f6565b6040516100be919061082d565b60405180910390f35b6100cf61031a565b6101326040516020016100e1906108a5565b604051602081830303815290604052805190602001206040518060400160405280600a81526020017f434f4e54524f4c4c4552000000000000000000000000000000000000000000008152506104e6565b60006040518060c001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001836000013581526020018360200160208101906101d491906108c5565b73ffffffffffffffffffffffffffffffffffffffff16815260200183604001602081019061020291906108c5565b73ffffffffffffffffffffffffffffffffffffffff168152602001836060016020810190610230919061092b565b60ff16815250905073__$b47f57a87b0fdb80638269130c078613b3$__6324d9897a84836040518363ffffffff1660e01b8152600401610271929190610a19565b60006040518083038186803b15801561028957600080fd5b505af415801561029d573d6000803e3d6000fd5b50505050506102aa6105c9565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bd02d0f560405160200161036790610a8e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016103999190610ac7565b602060405180830381865afa1580156103b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103da9190610b0e565b90506000811461041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610b87565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a60405160200161046a90610a8e565b6040516020818303038152906040528051906020012060016040518363ffffffff1660e01b815260040161049f929190610bb6565b6020604051808303816000875af11580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e29190610b0e565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ac4ab3fb33846040518363ffffffff1660e01b8152600401610541929190610bee565b602060405180830381865afa15801561055e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105829190610c4f565b6105c55733816040517fa35b150b0000000000000000000000000000000000000000000000000000000081526004016105bc929190610cfb565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a60405160200161061490610a8e565b6040516020818303038152906040528051906020012060006040518363ffffffff1660e01b8152600401610649929190610bb6565b6020604051808303816000875af1158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190610b0e565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106bf82610694565b9050919050565b6106cf816106b4565b81146106da57600080fd5b50565b6000813590506106ec816106c6565b92915050565b600080fd5b60006080828403121561070d5761070c6106f2565b5b81905092915050565b60008060a0838503121561072d5761072c61068f565b5b600061073b858286016106dd565b925050602061074c858286016106f7565b9150509250929050565b6000819050919050565b600061077b61077661077184610694565b610756565b610694565b9050919050565b600061078d82610760565b9050919050565b600061079f82610782565b9050919050565b6107af81610794565b82525050565b60006020820190506107ca60008301846107a6565b92915050565b60006107db82610782565b9050919050565b6107eb816107d0565b82525050565b600060208201905061080660008301846107e2565b92915050565b600061081782610782565b9050919050565b6108278161080c565b82525050565b6000602082019050610842600083018461081e565b92915050565b600082825260208201905092915050565b7f434f4e54524f4c4c455200000000000000000000000000000000000000000000600082015250565b600061088f600a83610848565b915061089a82610859565b602082019050919050565b600060208201905081810360008301526108be81610882565b9050919050565b6000602082840312156108db576108da61068f565b5b60006108e9848285016106dd565b91505092915050565b600060ff82169050919050565b610908816108f2565b811461091357600080fd5b50565b600081359050610925816108ff565b92915050565b6000602082840312156109415761094061068f565b5b600061094f84828501610916565b91505092915050565b610961816106b4565b82525050565b610970816106b4565b82525050565b6000819050919050565b61098981610976565b82525050565b610998816108f2565b82525050565b60c0820160008201516109b46000850182610967565b5060208201516109c76020850182610967565b5060408201516109da6040850182610980565b5060608201516109ed6060850182610967565b506080820151610a006080850182610967565b5060a0820151610a1360a085018261098f565b50505050565b600060e082019050610a2e6000830185610958565b610a3b602083018461099e565b9392505050565b7f5245454e5452414e43595f47554152445f535441545553000000000000000000600082015250565b6000610a78601783610848565b9150610a8382610a42565b602082019050919050565b60006020820190508181036000830152610aa781610a6b565b9050919050565b6000819050919050565b610ac181610aae565b82525050565b6000602082019050610adc6000830184610ab8565b92915050565b610aeb81610976565b8114610af657600080fd5b50565b600081519050610b0881610ae2565b92915050565b600060208284031215610b2457610b2361068f565b5b6000610b3284828501610af9565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610b71601f83610848565b9150610b7c82610b3b565b602082019050919050565b60006020820190508181036000830152610ba081610b64565b9050919050565b610bb081610976565b82525050565b6000604082019050610bcb6000830185610ab8565b610bd86020830184610ba7565b9392505050565b610be8816106b4565b82525050565b6000604082019050610c036000830185610bdf565b610c106020830184610ab8565b9392505050565b60008115159050919050565b610c2c81610c17565b8114610c3757600080fd5b50565b600081519050610c4981610c23565b92915050565b600060208284031215610c6557610c6461068f565b5b6000610c7384828501610c3a565b91505092915050565b600081519050919050565b60005b83811015610ca5578082015181840152602081019050610c8a565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ccd82610c7c565b610cd78185610848565b9350610ce7818560208601610c87565b610cf081610cb1565b840191505092915050565b6000604082019050610d106000830185610bdf565b8181036020830152610d228184610cc2565b9050939250505056fea264697066735822122035b5a400c68b3b3ac4f39e95f8954f1ad23c3c796d014139e68bf90e4cba75b464736f6c634300081b0033";

type DepositHandlerConstructorParams =
  | [linkLibraryAddresses: DepositHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DepositHandler__factory extends ContractFactory {
  constructor(...args: DepositHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DepositHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DepositHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b47f57a87b0fdb80638269130c078613b3\\$__", "g"),
      linkLibraryAddresses["contracts/deposit/DepositUtils.sol:DepositUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _roleStore: AddressLike,
    _dataStore: AddressLike,
    _eventEmitter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      overrides || {}
    );
  }
  override deploy(
    _roleStore: AddressLike,
    _dataStore: AddressLike,
    _eventEmitter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      overrides || {}
    ) as Promise<
      DepositHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DepositHandler__factory {
    return super.connect(runner) as DepositHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositHandlerInterface {
    return new Interface(_abi) as DepositHandlerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DepositHandler {
    return new Contract(address, _abi, runner) as unknown as DepositHandler;
  }
}

export interface DepositHandlerLibraryAddresses {
  ["contracts/deposit/DepositUtils.sol:DepositUtils"]: string;
}
