/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RedeemHandler,
  RedeemHandlerInterface,
} from "../../../contracts/exchange/RedeemHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "tokenIndex",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "redeemAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
        ],
        internalType: "struct RedeemUtils.RedeemParams",
        name: "redeemParams",
        type: "tuple",
      },
    ],
    name: "executeRedeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610fb2380380610fb2833981810160405281019061003291906101cb565b82828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505061021e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061010a826100df565b9050919050565b600061011c826100ff565b9050919050565b61012c81610111565b811461013757600080fd5b50565b60008151905061014981610123565b92915050565b600061015a826100ff565b9050919050565b61016a8161014f565b811461017557600080fd5b50565b60008151905061018781610161565b92915050565b6000610198826100ff565b9050919050565b6101a88161018d565b81146101b357600080fd5b50565b6000815190506101c58161019f565b92915050565b6000806000606084860312156101e4576101e36100da565b5b60006101f28682870161013a565b935050602061020386828701610178565b9250506040610214868287016101b6565b9150509250925092565b60805160a05160c051610d3d610275600039600081816101c501526102d401526000818160c901526104c401526000818160ed01528181610189015281816102fa015281816103fd01526105a70152610d3d6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a4a7b0414610051578063660d0d671461006f578063699c34511461008d5780639ff78c30146100a9575b600080fd5b6100596100c7565b60405161006691906106ea565b60405180910390f35b6100776100eb565b6040516100849190610726565b60405180910390f35b6100a760048036038101906100a291906107a8565b61010f565b005b6100b16102d2565b6040516100be9190610809565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6101176102f6565b61017a60405160200161012990610881565b604051602081830303815290604052805190602001206040518060400160405280600a81526020017f434f4e54524f4c4c4552000000000000000000000000000000000000000000008152506104c2565b60006040518060c001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018360000135815260200183602001602081019061021c91906108da565b60ff168152602001836040013581526020018360600160208101906102419190610907565b73ffffffffffffffffffffffffffffffffffffffff16815250905073__$a603f240d0794887c5f54376ba250b7e16$__630966bf2b84836040518363ffffffff1660e01b81526004016102959291906109f5565b60006040518083038186803b1580156102ad57600080fd5b505af41580156102c1573d6000803e3d6000fd5b50505050506102ce6105a5565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bd02d0f560405160200161034390610a6a565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016103759190610aa3565b602060405180830381865afa158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b69190610aea565b9050600081146103fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f290610b63565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a60405160200161044690610a6a565b6040516020818303038152906040528051906020012060016040518363ffffffff1660e01b815260040161047b929190610b92565b6020604051808303816000875af115801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be9190610aea565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ac4ab3fb33846040518363ffffffff1660e01b815260040161051d929190610bca565b602060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190610c2b565b6105a15733816040517fa35b150b000000000000000000000000000000000000000000000000000000008152600401610598929190610cd7565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a6040516020016105f090610a6a565b6040516020818303038152906040528051906020012060006040518363ffffffff1660e01b8152600401610625929190610b92565b6020604051808303816000875af1158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106689190610aea565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106b06106ab6106a68461066b565b61068b565b61066b565b9050919050565b60006106c282610695565b9050919050565b60006106d4826106b7565b9050919050565b6106e4816106c9565b82525050565b60006020820190506106ff60008301846106db565b92915050565b6000610710826106b7565b9050919050565b61072081610705565b82525050565b600060208201905061073b6000830184610717565b92915050565b600080fd5b60006107518261066b565b9050919050565b61076181610746565b811461076c57600080fd5b50565b60008135905061077e81610758565b92915050565b600080fd5b60006080828403121561079f5761079e610784565b5b81905092915050565b60008060a083850312156107bf576107be610741565b5b60006107cd8582860161076f565b92505060206107de85828601610789565b9150509250929050565b60006107f3826106b7565b9050919050565b610803816107e8565b82525050565b600060208201905061081e60008301846107fa565b92915050565b600082825260208201905092915050565b7f434f4e54524f4c4c455200000000000000000000000000000000000000000000600082015250565b600061086b600a83610824565b915061087682610835565b602082019050919050565b6000602082019050818103600083015261089a8161085e565b9050919050565b600060ff82169050919050565b6108b7816108a1565b81146108c257600080fd5b50565b6000813590506108d4816108ae565b92915050565b6000602082840312156108f0576108ef610741565b5b60006108fe848285016108c5565b91505092915050565b60006020828403121561091d5761091c610741565b5b600061092b8482850161076f565b91505092915050565b61093d81610746565b82525050565b61094c81610746565b82525050565b6000819050919050565b61096581610952565b82525050565b610974816108a1565b82525050565b60c0820160008201516109906000850182610943565b5060208201516109a36020850182610943565b5060408201516109b6604085018261095c565b5060608201516109c9606085018261096b565b5060808201516109dc608085018261095c565b5060a08201516109ef60a0850182610943565b50505050565b600060e082019050610a0a6000830185610934565b610a17602083018461097a565b9392505050565b7f5245454e5452414e43595f47554152445f535441545553000000000000000000600082015250565b6000610a54601783610824565b9150610a5f82610a1e565b602082019050919050565b60006020820190508181036000830152610a8381610a47565b9050919050565b6000819050919050565b610a9d81610a8a565b82525050565b6000602082019050610ab86000830184610a94565b92915050565b610ac781610952565b8114610ad257600080fd5b50565b600081519050610ae481610abe565b92915050565b600060208284031215610b0057610aff610741565b5b6000610b0e84828501610ad5565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610b4d601f83610824565b9150610b5882610b17565b602082019050919050565b60006020820190508181036000830152610b7c81610b40565b9050919050565b610b8c81610952565b82525050565b6000604082019050610ba76000830185610a94565b610bb46020830184610b83565b9392505050565b610bc481610746565b82525050565b6000604082019050610bdf6000830185610bbb565b610bec6020830184610a94565b9392505050565b60008115159050919050565b610c0881610bf3565b8114610c1357600080fd5b50565b600081519050610c2581610bff565b92915050565b600060208284031215610c4157610c40610741565b5b6000610c4f84828501610c16565b91505092915050565b600081519050919050565b60005b83811015610c81578082015181840152602081019050610c66565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ca982610c58565b610cb38185610824565b9350610cc3818560208601610c63565b610ccc81610c8d565b840191505092915050565b6000604082019050610cec6000830185610bbb565b8181036020830152610cfe8184610c9e565b9050939250505056fea2646970667358221220218928bf0e511e0cff1f5b45ae34859173b4b7c54e879fd1297f720a60a6866064736f6c634300081b0033";

type RedeemHandlerConstructorParams =
  | [linkLibraryAddresses: RedeemHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedeemHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RedeemHandler__factory extends ContractFactory {
  constructor(...args: RedeemHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        RedeemHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: RedeemHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a603f240d0794887c5f54376ba250b7e16\\$__", "g"),
      linkLibraryAddresses["contracts/redeem/RedeemUtils.sol:RedeemUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _roleStore: AddressLike,
    _dataStore: AddressLike,
    _eventEmitter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      overrides || {}
    );
  }
  override deploy(
    _roleStore: AddressLike,
    _dataStore: AddressLike,
    _eventEmitter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      overrides || {}
    ) as Promise<
      RedeemHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RedeemHandler__factory {
    return super.connect(runner) as RedeemHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedeemHandlerInterface {
    return new Interface(_abi) as RedeemHandlerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RedeemHandler {
    return new Contract(address, _abi, runner) as unknown as RedeemHandler;
  }
}

export interface RedeemHandlerLibraryAddresses {
  ["contracts/redeem/RedeemUtils.sol:RedeemUtils"]: string;
}
