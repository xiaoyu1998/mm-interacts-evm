/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Keys, KeysInterface } from "../../../contracts/data/Keys";

const _abi = [
  {
    inputs: [],
    name: "ACCOUNT_POSITION_LIST",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEBT_SAFETY_FACTOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_INTEREST_RATE_STRATEGY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_POOL_CONFIGURATION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATION_FEE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MARGIN_LEVELL_THRESHOLD",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_BORROW_RATE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL_LIST",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POSITION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POSITION_LIST",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REENTRANCY_GUARD_STATUS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHORT_LIQUIDITY_THRESHOLD",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_BASE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREASURY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WNT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610caa610052600b82828239805160001a6073146045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061010a5760003560e01c8063769af85d116100a15780639bfe0ccf116100705780639bfe0ccf14610277578063b182733014610295578063b8b4a543146102b3578063cea63f5d146102d15761010a565b8063769af85d146101ff5780637a0c5ebf1461021d5780637bf43e471461023b578063993f5450146102595761010a565b806335bf7457116100dd57806335bf74571461018757806336fef13d146101a55780636714ddd5146101c35780637535d246146101e15761010a565b8063041429b81461010f5780632ccfe1eb1461012d5780632d2c55651461014b578063355ac59614610169575b600080fd5b6101176102ef565b6040516101249190610588565b60405180910390f35b610135610317565b6040516101429190610588565b60405180910390f35b61015361033f565b6040516101609190610588565b60405180910390f35b610171610367565b60405161017e9190610588565b60405180910390f35b61018f61038f565b60405161019c9190610588565b60405180910390f35b6101ad6103b7565b6040516101ba9190610588565b60405180910390f35b6101cb6103df565b6040516101d89190610588565b60405180910390f35b6101e9610407565b6040516101f69190610588565b60405180910390f35b61020761042f565b6040516102149190610588565b60405180910390f35b610225610457565b6040516102329190610588565b60405180910390f35b61024361047f565b6040516102509190610588565b60405180910390f35b6102616104a7565b60405161026e9190610588565b60405180910390f35b61027f6104cf565b60405161028c9190610588565b60405180910390f35b61029d6104f7565b6040516102aa9190610588565b60405180910390f35b6102bb61051f565b6040516102c89190610588565b60405180910390f35b6102d9610547565b6040516102e69190610588565b60405180910390f35b6040516020016102fe90610600565b6040516020818303038152906040528051906020012081565b6040516020016103269061066c565b6040516020818303038152906040528051906020012081565b60405160200161034e906106d8565b6040516020818303038152906040528051906020012081565b60405160200161037690610744565b6040516020818303038152906040528051906020012081565b60405160200161039e906107b0565b6040516020818303038152906040528051906020012081565b6040516020016103c69061081c565b6040516020818303038152906040528051906020012081565b6040516020016103ee90610888565b6040516020818303038152906040528051906020012081565b604051602001610416906108f4565b6040516020818303038152906040528051906020012081565b60405160200161043e90610960565b6040516020818303038152906040528051906020012081565b604051602001610466906109cc565b6040516020818303038152906040528051906020012081565b60405160200161048e90610a38565b6040516020818303038152906040528051906020012081565b6040516020016104b690610aa4565b6040516020818303038152906040528051906020012081565b6040516020016104de90610b10565b6040516020818303038152906040528051906020012081565b60405160200161050690610b7c565b6040516020818303038152906040528051906020012081565b60405160200161052e90610be8565b6040516020818303038152906040528051906020012081565b60405160200161055690610c54565b6040516020818303038152906040528051906020012081565b6000819050919050565b6105828161056f565b82525050565b600060208201905061059d6000830184610579565b92915050565b600082825260208201905092915050565b7f4143434f554e545f504f534954494f4e5f4c4953540000000000000000000000600082015250565b60006105ea6015836105a3565b91506105f5826105b4565b602082019050919050565b60006020820190508181036000830152610619816105dd565b9050919050565b7f53484f52545f4c49515549444954595f5448524553484f4c4400000000000000600082015250565b60006106566019836105a3565b915061066182610620565b602082019050919050565b6000602082019050818103600083015261068581610649565b9050919050565b7f5452454153555259000000000000000000000000000000000000000000000000600082015250565b60006106c26008836105a3565b91506106cd8261068c565b602082019050919050565b600060208201905081810360008301526106f1816106b5565b9050919050565b7f504f534954494f4e000000000000000000000000000000000000000000000000600082015250565b600061072e6008836105a3565b9150610739826106f8565b602082019050919050565b6000602082019050818103600083015261075d81610721565b9050919050565b7f504f4f4c5f4c4953540000000000000000000000000000000000000000000000600082015250565b600061079a6009836105a3565b91506107a582610764565b602082019050919050565b600060208201905081810360008301526107c98161078d565b9050919050565b7f444542545f5341464554595f464143544f520000000000000000000000000000600082015250565b60006108066012836105a3565b9150610811826107d0565b602082019050919050565b60006020820190508181036000830152610835816107f9565b9050919050565b7f44454641554c545f494e5445524553545f524154455f53545241544547590000600082015250565b6000610872601e836105a3565b915061087d8261083c565b602082019050919050565b600060208201905081810360008301526108a181610865565b9050919050565b7f504f4f4c00000000000000000000000000000000000000000000000000000000600082015250565b60006108de6004836105a3565b91506108e9826108a8565b602082019050919050565b6000602082019050818103600083015261090d816108d1565b9050919050565b7f544f4b454e5f4241534500000000000000000000000000000000000000000000600082015250565b600061094a600a836105a3565b915061095582610914565b602082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4d41585f424f52524f575f524154450000000000000000000000000000000000600082015250565b60006109b6600f836105a3565b91506109c182610980565b602082019050919050565b600060208201905081810360008301526109e5816109a9565b9050919050565b7f574e540000000000000000000000000000000000000000000000000000000000600082015250565b6000610a226003836105a3565b9150610a2d826109ec565b602082019050919050565b60006020820190508181036000830152610a5181610a15565b9050919050565b7f44454641554c545f504f4f4c5f434f4e46494755524154494f4e000000000000600082015250565b6000610a8e601a836105a3565b9150610a9982610a58565b602082019050919050565b60006020820190508181036000830152610abd81610a81565b9050919050565b7f5245454e5452414e43595f47554152445f535441545553000000000000000000600082015250565b6000610afa6017836105a3565b9150610b0582610ac4565b602082019050919050565b60006020820190508181036000830152610b2981610aed565b9050919050565b7f4c49515549444154494f4e5f4645450000000000000000000000000000000000600082015250565b6000610b66600f836105a3565b9150610b7182610b30565b602082019050919050565b60006020820190508181036000830152610b9581610b59565b9050919050565b7f504f534954494f4e5f4c49535400000000000000000000000000000000000000600082015250565b6000610bd2600d836105a3565b9150610bdd82610b9c565b602082019050919050565b60006020820190508181036000830152610c0181610bc5565b9050919050565b7f4d415247494e5f4c4556454c4c5f5448524553484f4c44000000000000000000600082015250565b6000610c3e6017836105a3565b9150610c4982610c08565b602082019050919050565b60006020820190508181036000830152610c6d81610c31565b905091905056fea264697066735822122092bf3e8e5a0328c07ce74e502aac3ceaed393e23deff093795f28b00df10904264736f6c634300081c0033";

type KeysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Keys__factory extends ContractFactory {
  constructor(...args: KeysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Keys & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Keys__factory {
    return super.connect(runner) as Keys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeysInterface {
    return new Interface(_abi) as KeysInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Keys {
    return new Contract(address, _abi, runner) as unknown as Keys;
  }
}
