/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Config, ConfigInterface } from "../../../contracts/config/Config";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "EmptyPool",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyTokenBase",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyTreasury",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "MaxValidFeeFactor",
        type: "uint256",
      },
    ],
    name: "InvalidFeeFactor",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debtSaftyFactor",
        type: "uint256",
      },
    ],
    name: "setDebtSafetyFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "interestRateStrategy",
        type: "address",
      },
    ],
    name: "setDefaultInterestRateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "configuration",
        type: "uint256",
      },
    ],
    name: "setDefaultPoolConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidationFee",
        type: "uint256",
      },
    ],
    name: "setLiquidationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "setMarginLevelThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxBorrowRate",
        type: "uint256",
      },
    ],
    name: "setMaxBorrowRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shortEnabled",
        type: "bool",
      },
    ],
    name: "setShortEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shortLiquidityThreshold",
        type: "uint256",
      },
    ],
    name: "setShortLiquidityThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeFactor",
        type: "uint256",
      },
    ],
    name: "setSwapFeeFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "setTokenBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeFactor",
        type: "uint256",
      },
    ],
    name: "setTreasuryFeeFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516129c13803806129c18339818101604052810190610032919061015e565b818073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505060016000819055508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505061019e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100db826100b0565b9050919050565b60006100ed826100d0565b9050919050565b6100fd816100e2565b811461010857600080fd5b50565b60008151905061011a816100f4565b92915050565b600061012b826100d0565b9050919050565b61013b81610120565b811461014657600080fd5b50565b60008151905061015881610132565b92915050565b60008060408385031215610175576101746100ab565b5b60006101838582860161010b565b925050602061019485828601610149565b9150509250929050565b60805160a05161278e6102336000396000818161031e01528181610462015281816104a30152818161055801528181610599015281816105f4015281816106ba01528181610780015281816107a4015281816108e801528181610929015281816109ce01528181610a0001528181610c6d01528181610d0d0152610dad0152600081816105d00152610ddf015261278e6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806369ea868211610097578063ac9650d811610066578063ac9650d814610232578063bb789bd714610262578063f0f442601461027e578063fef0bec81461029a576100f5565b806369ea8682146101c25780636a97c0fe146101de57806388235d10146101fa57806392547c3814610216576100f5565b80634a4a7b04116100d35780634a4a7b041461014e57806357c25c661461016c5780635eadca7e14610188578063660d0d67146101a4576100f5565b80631dee7f3e146100fa5780632ffaf5591461011657806330a767c514610132575b600080fd5b610114600480360381019061010f919061186c565b6102b6565b005b610130600480360381019061012b91906118d1565b6103e2565b005b61014c6004803603810190610147919061195a565b6104d8565b005b6101566105ce565b6040516101639190611a0c565b60405180910390f35b61018660048036038101906101819190611a27565b6105f2565b005b6101a2600480360381019061019d9190611a27565b6106b8565b005b6101ac61077e565b6040516101b99190611a75565b60405180910390f35b6101dc60048036038101906101d7919061186c565b6107a2565b005b6101f860048036038101906101f3919061195a565b610868565b005b610214600480360381019061020f9190611a27565b61095e565b005b610230600480360381019061022b9190611a27565b6109fe565b005b61024c60048036038101906102479190611af5565b610ac4565b6040516102599190611c94565b60405180910390f35b61027c60048036038101906102779190611a27565b610bfd565b005b6102986004803603810190610293919061186c565b610c9d565b005b6102b460048036038101906102af9190611a27565b610d3d565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361031c576040517f58c52e4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ca446dd960405160200161036790611d13565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b815260040161039b929190611d5b565b6020604051808303816000875af11580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de9190611d99565b5050565b6104456040516020016103f490611e12565b604051602081830303815290604052805190602001206040518060400160405280600d81526020017f434f4e4649475f4b454550455200000000000000000000000000000000000000815250610ddd565b61044d610ec0565b60006104598484610f06565b905060006104877f000000000000000000000000000000000000000000000000000000000000000083610fa4565b905061049c8382610fb890919063ffffffff16565b90506104c97f00000000000000000000000000000000000000000000000000000000000000008383610ffc565b50506104d36110db565b505050565b61053b6040516020016104ea90611e12565b604051602081830303815290604052805190602001206040518060400160405280600d81526020017f434f4e4649475f4b454550455200000000000000000000000000000000000000815250610ddd565b610543610ec0565b600061054f8484610f06565b9050600061057d7f000000000000000000000000000000000000000000000000000000000000000083610fa4565b905061059283826110e590919063ffffffff16565b90506105bf7f00000000000000000000000000000000000000000000000000000000000000008383610ffc565b50506105c96110db565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a60405160200161063d90611e7e565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401610671929190611ead565b6020604051808303816000875af1158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b49190611eeb565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a60405160200161070390611f64565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401610737929190611ead565b6020604051808303816000875af1158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a9190611eeb565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ca446dd96040516020016107ed90611fd0565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401610821929190611d5b565b6020604051808303816000875af1158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190611d99565b5050565b6108cb60405160200161087a90611e12565b604051602081830303815290604052805190602001206040518060400160405280600d81526020017f434f4e4649475f4b454550455200000000000000000000000000000000000000815250610ddd565b6108d3610ec0565b60006108df8484610f06565b9050600061090d7f000000000000000000000000000000000000000000000000000000000000000083610fa4565b9050610922838261116390919063ffffffff16565b905061094f7f00000000000000000000000000000000000000000000000000000000000000008383610ffc565b50506109596110db565b505050565b6109c160405160200161097090611e12565b604051602081830303815290604052805190602001206040518060400160405280600d81526020017f434f4e4649475f4b454550455200000000000000000000000000000000000000815250610ddd565b6109c9610ec0565b6109f37f0000000000000000000000000000000000000000000000000000000000000000826111e1565b6109fb6110db565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a604051602001610a499061203c565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401610a7d929190611ead565b6020604051808303816000875af1158015610a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac09190611eeb565b5050565b60608282905067ffffffffffffffff811115610ae357610ae261205c565b5b604051908082528060200260200182016040528015610b1657816020015b6060815260200190600190039081610b015790505b50905060005b83839050811015610bf6576000803073ffffffffffffffffffffffffffffffffffffffff16868685818110610b5457610b5361208b565b5b9050602002810190610b6691906120c9565b604051610b7492919061216b565b600060405180830381855af49150503d8060008114610baf576040519150601f19603f3d011682016040523d82523d6000602084013e610bb4565b606091505b509150915081610bc857610bc781611288565b5b80848481518110610bdc57610bdb61208b565b5b602002602001018190525050508080600101915050610b1c565b5092915050565b610c60604051602001610c0f90611e12565b604051602081830303815290604052805190602001206040518060400160405280600d81526020017f434f4e4649475f4b454550455200000000000000000000000000000000000000815250610ddd565b610c68610ec0565b610c927f0000000000000000000000000000000000000000000000000000000000000000826112e9565b610c9a6110db565b50565b610d00604051602001610caf90611e12565b604051602081830303815290604052805190602001206040518060400160405280600d81526020017f434f4e4649475f4b454550455200000000000000000000000000000000000000815250610ddd565b610d08610ec0565b610d327f000000000000000000000000000000000000000000000000000000000000000082611390565b610d3a6110db565b50565b610da0604051602001610d4f90611e12565b604051602081830303815290604052805190602001206040518060400160405280600d81526020017f434f4e4649475f4b454550455200000000000000000000000000000000000000815250610ddd565b610da8610ec0565b610dd27f00000000000000000000000000000000000000000000000000000000000000008261149d565b610dda6110db565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ac4ab3fb33846040518363ffffffff1660e01b8152600401610e38929190612184565b602060405180830381865afa158015610e55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7991906121c2565b610ebc5733816040517fa35b150b000000000000000000000000000000000000000000000000000000008152600401610eb3929190612233565b60405180910390fd5b5050565b600260005403610efc576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1610610f42578183610f45565b82825b8093508194505050604051602001610f5c906122af565b604051602081830303815290604052805190602001208383604051602001610f86939291906122cf565b60405160208183030381529060405280519060200120905092915050565b6000610fb08383611544565b905092915050565b6000603382610fc8576000610fcb565b60015b60ff16901b7ffffffffffffffffffffffffffffffffffffffffffffffffffff7ffffffffffff841617905092915050565b60006110088484611622565b90508073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a8460405160200161103690612352565b6040516020818303038152906040528051906020012060405160200161105d929190612372565b60405160208183030381529060405280519060200120846040518363ffffffff1660e01b8152600401611091929190611ead565b6020604051808303816000875af11580156110b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d49190611eeb565b5050505050565b6001600081905550565b600061ffff821115611132578161ffff6040517f9d1ea70b00000000000000000000000000000000000000000000000000000000815260040161112992919061239b565b60405180910390fd5b604882901b7fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff841617905092915050565b600061ffff8211156111b0578161ffff6040517f9d1ea70b0000000000000000000000000000000000000000000000000000000081526004016111a792919061239b565b60405180910390fd5b603882901b7fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff841617905092915050565b8173ffffffffffffffffffffffffffffffffffffffff1663e2a4853a60405160200161120c90612410565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401611240929190611ead565b6020604051808303816000875af115801561125f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112839190611eeb565b505050565b60008061129483611713565b9150915080156112db57816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d29190612430565b60405180910390fd5b6112e4836117da565b505050565b8173ffffffffffffffffffffffffffffffffffffffff1663e2a4853a6040516020016113149061249e565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401611348929190611ead565b6020604051808303816000875af1158015611367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138b9190611eeb565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113f6576040517fcdcb50b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663ca446dd96040516020016114219061250a565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401611455929190611d5b565b6020604051808303816000875af1158015611474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114989190611d99565b505050565b8173ffffffffffffffffffffffffffffffffffffffff1663e2a4853a6040516020016114c890612576565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b81526004016114fc929190611ead565b6020604051808303816000875af115801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f9190611eeb565b505050565b6000806115518484611622565b90508073ffffffffffffffffffffffffffffffffffffffff1663bd02d0f58460405160200161157f90612352565b604051602081830303815290604052805190602001206040516020016115a6929190612372565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016115d89190612596565b602060405180830381865afa1580156115f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116199190611eeb565b91505092915050565b6000808390508073ffffffffffffffffffffffffffffffffffffffff166391d4403c604051602001611653906125fd565b60405160208183030381529060405280519060200120856040518363ffffffff1660e01b8152600401611687929190612372565b602060405180830381865afa1580156116a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c891906121c2565b61170957826040517f7357d91f0000000000000000000000000000000000000000000000000000000081526004016117009190612596565b60405180910390fd5b8091505092915050565b6060600060448351101561173d5760006040518060200160405280600081525090915091506117d5565b6000611748846117e7565b90506308c379a060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036117bc57600484019350838060200190518101906117b0919061270f565b600192509250506117d5565b6000604051806020016040528060008152509092509250505b915091565b6000815190508060208301fd5b6000806020830151905080915050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118398261180e565b9050919050565b6118498161182e565b811461185457600080fd5b50565b60008135905061186681611840565b92915050565b60006020828403121561188257611881611804565b5b600061189084828501611857565b91505092915050565b60008115159050919050565b6118ae81611899565b81146118b957600080fd5b50565b6000813590506118cb816118a5565b92915050565b6000806000606084860312156118ea576118e9611804565b5b60006118f886828701611857565b935050602061190986828701611857565b925050604061191a868287016118bc565b9150509250925092565b6000819050919050565b61193781611924565b811461194257600080fd5b50565b6000813590506119548161192e565b92915050565b60008060006060848603121561197357611972611804565b5b600061198186828701611857565b935050602061199286828701611857565b92505060406119a386828701611945565b9150509250925092565b6000819050919050565b60006119d26119cd6119c88461180e565b6119ad565b61180e565b9050919050565b60006119e4826119b7565b9050919050565b60006119f6826119d9565b9050919050565b611a06816119eb565b82525050565b6000602082019050611a2160008301846119fd565b92915050565b600060208284031215611a3d57611a3c611804565b5b6000611a4b84828501611945565b91505092915050565b6000611a5f826119d9565b9050919050565b611a6f81611a54565b82525050565b6000602082019050611a8a6000830184611a66565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611ab557611ab4611a90565b5b8235905067ffffffffffffffff811115611ad257611ad1611a95565b5b602083019150836020820283011115611aee57611aed611a9a565b5b9250929050565b60008060208385031215611b0c57611b0b611804565b5b600083013567ffffffffffffffff811115611b2a57611b29611809565b5b611b3685828601611a9f565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ba8578082015181840152602081019050611b8d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611bd082611b6e565b611bda8185611b79565b9350611bea818560208601611b8a565b611bf381611bb4565b840191505092915050565b6000611c0a8383611bc5565b905092915050565b6000602082019050919050565b6000611c2a82611b42565b611c348185611b4d565b935083602082028501611c4685611b5e565b8060005b85811015611c825784840389528151611c638582611bfe565b9450611c6e83611c12565b925060208a01995050600181019050611c4a565b50829750879550505050505092915050565b60006020820190508181036000830152611cae8184611c1f565b905092915050565b600082825260208201905092915050565b7f544f4b454e5f4241534500000000000000000000000000000000000000000000600082015250565b6000611cfd600a83611cb6565b9150611d0882611cc7565b602082019050919050565b60006020820190508181036000830152611d2c81611cf0565b9050919050565b6000819050919050565b611d4681611d33565b82525050565b611d558161182e565b82525050565b6000604082019050611d706000830185611d3d565b611d7d6020830184611d4c565b9392505050565b600081519050611d9381611840565b92915050565b600060208284031215611daf57611dae611804565b5b6000611dbd84828501611d84565b91505092915050565b7f434f4e4649475f4b454550455200000000000000000000000000000000000000600082015250565b6000611dfc600d83611cb6565b9150611e0782611dc6565b602082019050919050565b60006020820190508181036000830152611e2b81611def565b9050919050565b7f4d41585f424f52524f575f524154450000000000000000000000000000000000600082015250565b6000611e68600f83611cb6565b9150611e7382611e32565b602082019050919050565b60006020820190508181036000830152611e9781611e5b565b9050919050565b611ea781611924565b82525050565b6000604082019050611ec26000830185611d3d565b611ecf6020830184611e9e565b9392505050565b600081519050611ee58161192e565b92915050565b600060208284031215611f0157611f00611804565b5b6000611f0f84828501611ed6565b91505092915050565b7f44454641554c545f504f4f4c5f434f4e46494755524154494f4e000000000000600082015250565b6000611f4e601a83611cb6565b9150611f5982611f18565b602082019050919050565b60006020820190508181036000830152611f7d81611f41565b9050919050565b7f44454641554c545f494e5445524553545f524154455f53545241544547590000600082015250565b6000611fba601e83611cb6565b9150611fc582611f84565b602082019050919050565b60006020820190508181036000830152611fe981611fad565b9050919050565b7f53484f52545f4c49515549444954595f5448524553484f4c4400000000000000600082015250565b6000612026601983611cb6565b915061203182611ff0565b602082019050919050565b6000602082019050818103600083015261205581612019565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126120e6576120e56120ba565b5b80840192508235915067ffffffffffffffff821115612108576121076120bf565b5b602083019250600182023603831315612124576121236120c4565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000612152838561212c565b935061215f838584612137565b82840190509392505050565b6000612178828486612146565b91508190509392505050565b60006040820190506121996000830185611d4c565b6121a66020830184611d3d565b9392505050565b6000815190506121bc816118a5565b92915050565b6000602082840312156121d8576121d7611804565b5b60006121e6848285016121ad565b91505092915050565b600081519050919050565b6000612205826121ef565b61220f8185611cb6565b935061221f818560208601611b8a565b61222881611bb4565b840191505092915050565b60006040820190506122486000830185611d4c565b818103602083015261225a81846121fa565b90509392505050565b7f504f4f4c00000000000000000000000000000000000000000000000000000000600082015250565b6000612299600483611cb6565b91506122a482612263565b602082019050919050565b600060208201905081810360008301526122c88161228c565b9050919050565b60006060820190506122e46000830186611d3d565b6122f16020830185611d4c565b6122fe6040830184611d4c565b949350505050565b7f504f4f4c5f434f4e46494755524154494f4e0000000000000000000000000000600082015250565b600061233c601283611cb6565b915061234782612306565b602082019050919050565b6000602082019050818103600083015261236b8161232f565b9050919050565b60006040820190506123876000830185611d3d565b6123946020830184611d3d565b9392505050565b60006040820190506123b06000830185611e9e565b6123bd6020830184611e9e565b9392505050565b7f4d415247494e5f4c4556454c4c5f5448524553484f4c44000000000000000000600082015250565b60006123fa601783611cb6565b9150612405826123c4565b602082019050919050565b60006020820190508181036000830152612429816123ed565b9050919050565b6000602082019050818103600083015261244a81846121fa565b905092915050565b7f444542545f5341464554595f464143544f520000000000000000000000000000600082015250565b6000612488601283611cb6565b915061249382612452565b602082019050919050565b600060208201905081810360008301526124b78161247b565b9050919050565b7f5452454153555259000000000000000000000000000000000000000000000000600082015250565b60006124f4600883611cb6565b91506124ff826124be565b602082019050919050565b60006020820190508181036000830152612523816124e7565b9050919050565b7f4c49515549444154494f4e5f4645450000000000000000000000000000000000600082015250565b6000612560600f83611cb6565b915061256b8261252a565b602082019050919050565b6000602082019050818103600083015261258f81612553565b9050919050565b60006020820190506125ab6000830184611d3d565b92915050565b7f504f4f4c5f4c4953540000000000000000000000000000000000000000000000600082015250565b60006125e7600983611cb6565b91506125f2826125b1565b602082019050919050565b60006020820190508181036000830152612616816125da565b9050919050565b600080fd5b61262b82611bb4565b810181811067ffffffffffffffff8211171561264a5761264961205c565b5b80604052505050565b600061265d6117fa565b90506126698282612622565b919050565b600067ffffffffffffffff8211156126895761268861205c565b5b61269282611bb4565b9050602081019050919050565b60006126b26126ad8461266e565b612653565b9050828152602081018484840111156126ce576126cd61261d565b5b6126d9848285611b8a565b509392505050565b600082601f8301126126f6576126f5611a90565b5b815161270684826020860161269f565b91505092915050565b60006020828403121561272557612724611804565b5b600082015167ffffffffffffffff81111561274357612742611809565b5b61274f848285016126e1565b9150509291505056fea2646970667358221220c4237bd6c12a7d93b90b52803bbd8a0fa7723eba3c0794b415798efbfca27d4c64736f6c634300081c0033";

type ConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Config__factory extends ContractFactory {
  constructor(...args: ConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _roleStore: AddressLike,
    _dataStore: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_roleStore, _dataStore, overrides || {});
  }
  override deploy(
    _roleStore: AddressLike,
    _dataStore: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_roleStore, _dataStore, overrides || {}) as Promise<
      Config & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Config__factory {
    return super.connect(runner) as Config__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigInterface {
    return new Interface(_abi) as ConfigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Config {
    return new Contract(address, _abi, runner) as unknown as Config;
  }
}
