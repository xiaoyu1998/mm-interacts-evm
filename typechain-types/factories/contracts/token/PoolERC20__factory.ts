/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PoolERC20,
  PoolERC20Interface,
} from "../../../contracts/token/PoolERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600281526020017f4d4d000000000000000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016100c795949392919061015c565b60405160208183030381529060405280519060200120600381905550506101af565b6000819050919050565b6100fc816100e9565b82525050565b6000819050919050565b61011581610102565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101468261011b565b9050919050565b6101568161013b565b82525050565b600060a08201905061017160008301886100f3565b61017e60208301876100f3565b61018b60408301866100f3565b610198606083018561010c565b6101a5608083018461014d565b9695505050505050565b61122d806101be6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461022a578063a9059cbb14610248578063d505accf14610278578063dd62ed3e14610294576100cf565b80633644e515146101ac57806370a08231146101ca5780637ecebe00146101fa576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd1461014057806330adf81f14610170578063313ce5671461018e575b600080fd5b6100dc6102c4565b6040516100e99190610a84565b60405180910390f35b61010c60048036038101906101079190610b3f565b6102fd565b6040516101199190610b9a565b60405180910390f35b61012a610314565b6040516101379190610bc4565b60405180910390f35b61015a60048036038101906101559190610bdf565b61031a565b6040516101679190610b9a565b60405180910390f35b6101786103c4565b6040516101859190610c4b565b60405180910390f35b6101966103eb565b6040516101a39190610c82565b60405180910390f35b6101b46103f0565b6040516101c19190610c4b565b60405180910390f35b6101e460048036038101906101df9190610c9d565b6103f6565b6040516101f19190610bc4565b60405180910390f35b610214600480360381019061020f9190610c9d565b61040e565b6040516102219190610bc4565b60405180910390f35b610232610426565b60405161023f9190610a84565b60405180910390f35b610262600480360381019061025d9190610b3f565b61045f565b60405161026f9190610b9a565b60405180910390f35b610292600480360381019061028d9190610d22565b610476565b005b6102ae60048036038101906102a99190610dc4565b61069e565b6040516102bb9190610bc4565b60405180910390f35b6040518060400160405280600281526020017f4d4d00000000000000000000000000000000000000000000000000000000000081525081565b600061030a3384846106c3565b6001905092915050565b60005481565b60006103ae843384600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103a99190610e33565b6106c3565b6103b98484846107ae565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600281526020017f4d4d00000000000000000000000000000000000000000000000000000000000081525081565b600061046c3384846107ae565b6001905092915050565b428410156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610eb3565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061053590610ed3565b919050558a60405160200161054f96959493929190610f2a565b60405160208183030381529060405280519060200120604051602001610576929190611003565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516105b3949392919061103a565b6020604051602081039080840390855afa1580156105d5573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561064957508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f906110cb565b60405180910390fd5b6106938989896106c3565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107a19190610bc4565b60405180910390a3505050565b61080081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461094290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061089581600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461099b90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109359190610bc4565b60405180910390a3505050565b60008282846109519190610e33565b9150811115610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c90611137565b60405180910390fd5b92915050565b60008282846109aa9190611157565b91508110156109ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e5906111d7565b60405180910390fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a2e578082015181840152602081019050610a13565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a56826109f4565b610a6081856109ff565b9350610a70818560208601610a10565b610a7981610a3a565b840191505092915050565b60006020820190508181036000830152610a9e8184610a4b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad682610aab565b9050919050565b610ae681610acb565b8114610af157600080fd5b50565b600081359050610b0381610add565b92915050565b6000819050919050565b610b1c81610b09565b8114610b2757600080fd5b50565b600081359050610b3981610b13565b92915050565b60008060408385031215610b5657610b55610aa6565b5b6000610b6485828601610af4565b9250506020610b7585828601610b2a565b9150509250929050565b60008115159050919050565b610b9481610b7f565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b610bbe81610b09565b82525050565b6000602082019050610bd96000830184610bb5565b92915050565b600080600060608486031215610bf857610bf7610aa6565b5b6000610c0686828701610af4565b9350506020610c1786828701610af4565b9250506040610c2886828701610b2a565b9150509250925092565b6000819050919050565b610c4581610c32565b82525050565b6000602082019050610c606000830184610c3c565b92915050565b600060ff82169050919050565b610c7c81610c66565b82525050565b6000602082019050610c976000830184610c73565b92915050565b600060208284031215610cb357610cb2610aa6565b5b6000610cc184828501610af4565b91505092915050565b610cd381610c66565b8114610cde57600080fd5b50565b600081359050610cf081610cca565b92915050565b610cff81610c32565b8114610d0a57600080fd5b50565b600081359050610d1c81610cf6565b92915050565b600080600080600080600060e0888a031215610d4157610d40610aa6565b5b6000610d4f8a828b01610af4565b9750506020610d608a828b01610af4565b9650506040610d718a828b01610b2a565b9550506060610d828a828b01610b2a565b9450506080610d938a828b01610ce1565b93505060a0610da48a828b01610d0d565b92505060c0610db58a828b01610d0d565b91505092959891949750929550565b60008060408385031215610ddb57610dda610aa6565b5b6000610de985828601610af4565b9250506020610dfa85828601610af4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e3e82610b09565b9150610e4983610b09565b9250828203905081811115610e6157610e60610e04565b5b92915050565b7f55463a2045585049524544000000000000000000000000000000000000000000600082015250565b6000610e9d600b836109ff565b9150610ea882610e67565b602082019050919050565b60006020820190508181036000830152610ecc81610e90565b9050919050565b6000610ede82610b09565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f1057610f0f610e04565b5b600182019050919050565b610f2481610acb565b82525050565b600060c082019050610f3f6000830189610c3c565b610f4c6020830188610f1b565b610f596040830187610f1b565b610f666060830186610bb5565b610f736080830185610bb5565b610f8060a0830184610bb5565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000610fcc600283610f8b565b9150610fd782610f96565b600282019050919050565b6000819050919050565b610ffd610ff882610c32565b610fe2565b82525050565b600061100e82610fbf565b915061101a8285610fec565b60208201915061102a8284610fec565b6020820191508190509392505050565b600060808201905061104f6000830187610c3c565b61105c6020830186610c73565b6110696040830185610c3c565b6110766060830184610c3c565b95945050505050565b7f55463a20494e56414c49445f5349474e41545552450000000000000000000000600082015250565b60006110b56015836109ff565b91506110c08261107f565b602082019050919050565b600060208201905081810360008301526110e4816110a8565b9050919050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b60006111216015836109ff565b915061112c826110eb565b602082019050919050565b6000602082019050818103600083015261115081611114565b9050919050565b600061116282610b09565b915061116d83610b09565b925082820190508082111561118557611184610e04565b5b92915050565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000600082015250565b60006111c16014836109ff565b91506111cc8261118b565b602082019050919050565b600060208201905081810360008301526111f0816111b4565b905091905056fea26469706673582212204308b7b196255f08c197ed334bd1db68030521664d9886aa43cbcc86c398497764736f6c634300081c0033";

type PoolERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolERC20__factory extends ContractFactory {
  constructor(...args: PoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PoolERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PoolERC20__factory {
    return super.connect(runner) as PoolERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolERC20Interface {
    return new Interface(_abi) as PoolERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): PoolERC20 {
    return new Contract(address, _abi, runner) as unknown as PoolERC20;
  }
}
