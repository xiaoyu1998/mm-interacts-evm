/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeeHandler,
  FeeHandlerInterface,
} from "../../../contracts/fee/FeeHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "EmptyPool",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPoolKeys",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pool",
        type: "bytes32",
      },
    ],
    name: "EmptyUnclaimedFee",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "poolKeys",
        type: "bytes32[]",
      },
    ],
    name: "claimFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516114fd3803806114fd833981810160405281019061003291906101d1565b8260016000819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050610224565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610110826100e5565b9050919050565b600061012282610105565b9050919050565b61013281610117565b811461013d57600080fd5b50565b60008151905061014f81610129565b92915050565b600061016082610105565b9050919050565b61017081610155565b811461017b57600080fd5b50565b60008151905061018d81610167565b92915050565b600061019e82610105565b9050919050565b6101ae81610193565b81146101b957600080fd5b50565b6000815190506101cb816101a5565b92915050565b6000806000606084860312156101ea576101e96100e0565b5b60006101f886828701610140565b93505060206102098682870161017e565b925050604061021a868287016101bc565b9150509250925092565b60805160a05160c05161129061026d60003960008181610214015261027001526000818160ed015281816101bc01526101f301526000818160c901526102da01526112906000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634a4a7b0414610051578063660d0d671461006f5780637aa7aac31461008d5780639ff78c30146100a9575b600080fd5b6100596100c7565b6040516100669190610a48565b60405180910390f35b6100776100eb565b6040516100849190610a84565b60405180910390f35b6100a760048036038101906100a29190610c42565b61010f565b005b6100b161026e565b6040516100be9190610cac565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610117610292565b61017a60405160200161012990610d24565b604051602081830303815290604052805190602001206040518060400160405280600a81526020017f4645455f4b4545504552000000000000000000000000000000000000000000008152506102d8565b60008151036101b5576040517f7a439c4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006101e07f00000000000000000000000000000000000000000000000000000000000000006103bb565b905060005b8251811015610261576102547f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000085848151811061024657610245610d44565b5b602002602001015185610462565b80806001019150506101e5565b505061026b610555565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002600054036102ce576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ac4ab3fb33846040518363ffffffff1660e01b8152600401610333929190610da3565b602060405180830381865afa158015610350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103749190610e04565b6103b75733816040517fa35b150b0000000000000000000000000000000000000000000000000000000081526004016103ae929190610e9f565b60405180910390fd5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166321f8a7216040516020016103e890610f1b565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161041a9190610f3b565b602060405180830381865afa158015610437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190610f82565b9050919050565b600061046e858461055f565b9050600061047c868561063d565b9050600081036104c357836040517f4e4b0d590000000000000000000000000000000000000000000000000000000081526004016104ba9190610f3b565b60405180910390fd5b60006104cf878661071b565b90508273ffffffffffffffffffffffffffffffffffffffff1663078d3b798286856040518463ffffffff1660e01b815260040161050e93929190610fc8565b600060405180830381600087803b15801561052857600080fd5b505af115801561053c573d6000803e3d6000fd5b5050505061054c878660006107f9565b50505050505050565b6001600081905550565b60008061056c84846108d8565b90508073ffffffffffffffffffffffffffffffffffffffff166321f8a7218460405160200161059a9061104b565b604051602081830303815290604052805190602001206040516020016105c192919061106b565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016105f39190610f3b565b602060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190610f82565b91505092915050565b60008061064a84846108d8565b90508073ffffffffffffffffffffffffffffffffffffffff1663bd02d0f584604051602001610678906110e0565b6040516020818303038152906040528051906020012060405160200161069f92919061106b565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016106d19190610f3b565b602060405180830381865afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610712919061112c565b91505092915050565b60008061072884846108d8565b90508073ffffffffffffffffffffffffffffffffffffffff166321f8a72184604051602001610756906111a5565b6040516020818303038152906040528051906020012060405160200161077d92919061106b565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016107af9190610f3b565b602060405180830381865afa1580156107cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f09190610f82565b91505092915050565b600061080584846108d8565b90508073ffffffffffffffffffffffffffffffffffffffff1663e2a4853a84604051602001610833906110e0565b6040516020818303038152906040528051906020012060405160200161085a92919061106b565b60405160208183030381529060405280519060200120846040518363ffffffff1660e01b815260040161088e9291906111c5565b6020604051808303816000875af11580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d1919061112c565b5050505050565b6000808390508073ffffffffffffffffffffffffffffffffffffffff166391d4403c6040516020016109099061123a565b60405160208183030381529060405280519060200120856040518363ffffffff1660e01b815260040161093d92919061106b565b602060405180830381865afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190610e04565b6109bf57826040517f7357d91f0000000000000000000000000000000000000000000000000000000081526004016109b69190610f3b565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a0e610a09610a04846109c9565b6109e9565b6109c9565b9050919050565b6000610a20826109f3565b9050919050565b6000610a3282610a15565b9050919050565b610a4281610a27565b82525050565b6000602082019050610a5d6000830184610a39565b92915050565b6000610a6e82610a15565b9050919050565b610a7e81610a63565b82525050565b6000602082019050610a996000830184610a75565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b0182610ab8565b810181811067ffffffffffffffff82111715610b2057610b1f610ac9565b5b80604052505050565b6000610b33610a9f565b9050610b3f8282610af8565b919050565b600067ffffffffffffffff821115610b5f57610b5e610ac9565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b610b8881610b75565b8114610b9357600080fd5b50565b600081359050610ba581610b7f565b92915050565b6000610bbe610bb984610b44565b610b29565b90508083825260208201905060208402830185811115610be157610be0610b70565b5b835b81811015610c0a5780610bf68882610b96565b845260208401935050602081019050610be3565b5050509392505050565b600082601f830112610c2957610c28610ab3565b5b8135610c39848260208601610bab565b91505092915050565b600060208284031215610c5857610c57610aa9565b5b600082013567ffffffffffffffff811115610c7657610c75610aae565b5b610c8284828501610c14565b91505092915050565b6000610c9682610a15565b9050919050565b610ca681610c8b565b82525050565b6000602082019050610cc16000830184610c9d565b92915050565b600082825260208201905092915050565b7f4645455f4b454550455200000000000000000000000000000000000000000000600082015250565b6000610d0e600a83610cc7565b9150610d1982610cd8565b602082019050919050565b60006020820190508181036000830152610d3d81610d01565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d7e826109c9565b9050919050565b610d8e81610d73565b82525050565b610d9d81610b75565b82525050565b6000604082019050610db86000830185610d85565b610dc56020830184610d94565b9392505050565b60008115159050919050565b610de181610dcc565b8114610dec57600080fd5b50565b600081519050610dfe81610dd8565b92915050565b600060208284031215610e1a57610e19610aa9565b5b6000610e2884828501610def565b91505092915050565b600081519050919050565b60005b83811015610e5a578082015181840152602081019050610e3f565b60008484015250505050565b6000610e7182610e31565b610e7b8185610cc7565b9350610e8b818560208601610e3c565b610e9481610ab8565b840191505092915050565b6000604082019050610eb46000830185610d85565b8181036020830152610ec68184610e66565b90509392505050565b7f5452454153555259000000000000000000000000000000000000000000000000600082015250565b6000610f05600883610cc7565b9150610f1082610ecf565b602082019050919050565b60006020820190508181036000830152610f3481610ef8565b9050919050565b6000602082019050610f506000830184610d94565b92915050565b610f5f81610d73565b8114610f6a57600080fd5b50565b600081519050610f7c81610f56565b92915050565b600060208284031215610f9857610f97610aa9565b5b6000610fa684828501610f6d565b91505092915050565b6000819050919050565b610fc281610faf565b82525050565b6000606082019050610fdd6000830186610d85565b610fea6020830185610d85565b610ff76040830184610fb9565b949350505050565b7f504f4f4c5f42414e4b0000000000000000000000000000000000000000000000600082015250565b6000611035600983610cc7565b915061104082610fff565b602082019050919050565b6000602082019050818103600083015261106481611028565b9050919050565b60006040820190506110806000830185610d94565b61108d6020830184610d94565b9392505050565b7f504f4f4c5f554e434c41494d45445f4645455f30000000000000000000000000600082015250565b60006110ca601483610cc7565b91506110d582611094565b602082019050919050565b600060208201905081810360008301526110f9816110bd565b9050919050565b61110981610faf565b811461111457600080fd5b50565b60008151905061112681611100565b92915050565b60006020828403121561114257611141610aa9565b5b600061115084828501611117565b91505092915050565b7f504f4f4c5f544f4b454e5f300000000000000000000000000000000000000000600082015250565b600061118f600c83610cc7565b915061119a82611159565b602082019050919050565b600060208201905081810360008301526111be81611182565b9050919050565b60006040820190506111da6000830185610d94565b6111e76020830184610fb9565b9392505050565b7f504f4f4c5f4c4953540000000000000000000000000000000000000000000000600082015250565b6000611224600983610cc7565b915061122f826111ee565b602082019050919050565b6000602082019050818103600083015261125381611217565b905091905056fea2646970667358221220ec2da4df2bf2a04ec0200b2107f916d2b1c1e4ccd8af318b4f1430f10bad634e64736f6c634300081c0033";

type FeeHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeHandler__factory extends ContractFactory {
  constructor(...args: FeeHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _roleStore: AddressLike,
    _dataStore: AddressLike,
    _eventEmitter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      overrides || {}
    );
  }
  override deploy(
    _roleStore: AddressLike,
    _dataStore: AddressLike,
    _eventEmitter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      overrides || {}
    ) as Promise<
      FeeHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeHandler__factory {
    return super.connect(runner) as FeeHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeHandlerInterface {
    return new Interface(_abi) as FeeHandlerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeHandler {
    return new Contract(address, _abi, runner) as unknown as FeeHandler;
  }
}
